# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven #

name: Java CI with Maven

on:
  push:
    branches: [ main , buildah ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:

    runs-on: [self-hosted,aks,github-lab]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Buildah
        run: |
          sudo apt-get update
          sudo apt-get -y install software-properties-common
          sudo add-apt-repository -y ppa:alexlarsson/flatpak
          # sudo add-apt-repository -y ppa:gophers/archive
          # sudo apt-add-repository -y ppa:projectatomic/ppa
          sudo apt-get -y -qq update
          sudo apt-get -y install bats btrfs-tools git libapparmor-dev libdevmapper-dev libglib2.0-dev libgpgme11-dev libseccomp-dev libselinux1-dev skopeo-containers go-md2man
          sudo apt-get -y install golang-1.13
          mkdir ~/buildah
          cd ~/buildah
          export GOPATH=`pwd`
          git clone https://github.com/containers/buildah ./src/github.com/containers/buildah
          cd ./src/github.com/containers/buildah
          PATH=/usr/lib/go-1.13/bin:$PATH make runc all SECURITYTAGS="apparmor seccomp"
          sudo make install install.runc
          buildah --help

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.2

      - run: mvn package

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          base-image: docker.io/fabric8/java-alpine-openjdk11-jre
          image: whoha4242/spring-petclinic
          tags: v1
          content: |
            target/spring-petclinic-2.7.0.BUILD-SNAPSHOT.jar
          entrypoint: java -jar spring-petclinic-2.7.0.BUILD-SNAPSHOT.jar
          port: 8080

      - name: Push To Registry
        id: push-to-registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
          extra-args: |
            --disable-content-trust

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push-to-registry.outputs) }}"
